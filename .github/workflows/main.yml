name: Deploy Github pages
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        persist-credentials: false
    - name: Install and Build
      run: |
        yarn
        yarn build 
    - name: Deploy to Server
      uses: easingthemes/ssh-deploy@main
      env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i"
          SOURCE: "build/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          EXCLUDE: "/dist/, .user.ini"
#     - name: Deploy to GitHub Pages
#       uses: JamesIves/github-pages-deploy-action@v4.4.1
#       with:
# #         token: # optional, default is ${{ github.token }}
#         # This is the branch you wish to deploy to, for example gh-pages or docs.
#         # branch: docs
#         # The folder in your repository that you want to deploy. If your build script compiles into a directory named build you would put it here. Folder paths cannot have a leading / or ./. If you wish to deploy the root directory you can place a . here.
#         folder: build
# #         # If you would like to push the contents of the deployment folder into a specific directory on the deployment branch you can specify it here.
# #         target-folder: # optional
# #         # If you need to customize the commit message for an integration you can do so.
# #         commit-message: # optional
# #         # If your project generates hashed files on build you can use this option to automatically delete them from the target folder on the deployment branch with each deploy. This option is on by default and can be toggled off by setting it to false.
# #         clean: # optional, default is true
# #         # If you need to use clean but you would like to preserve certain files or folders you can use this option. This should contain each pattern as a single line in a multiline string.
# #         clean-exclude: # optional
# #         # Do not actually push back, but use `--dry-run` on `git push` invocations instead.
# #         dry-run: # optional
# #         # Whether to force-push and overwrite any existing deployment. Setting this to false will attempt to rebase simultaneous deployments. This option is on by default and can be toggled off by setting it to false.
# #         force: # optional, default is true
# #         # Allows you to customize the name that is attached to the GitHub config which is used when pushing the deployment commits. If this is not included it will use the name in the GitHub context, followed by the name of the action.
# #         git-config-name: # optional
# #         # Allows you to customize the email that is attached to the GitHub config which is used when pushing the deployment commits. If this is not included it will use the email in the GitHub context, followed by a generic noreply GitHub email.
# #         git-config-email: # optional
# #         # Allows you to specify a different repository path so long as you have permissions to push to it. This should be formatted like so: JamesIves/github-pages-deploy-action
# #         repository-name: # optional
# #         # Add a tag to the commit, this can be used like so: 'v0.1'. Only works when 'dry-run' is not used.
# #         tag: # optional
# #         # This option can be used if you'd prefer to have a single commit on the deployment branch instead of maintaining the full history.
# #         single-commit: # optional
# #         # Silences the action output preventing it from displaying git messages.
# #         silent: # optional
